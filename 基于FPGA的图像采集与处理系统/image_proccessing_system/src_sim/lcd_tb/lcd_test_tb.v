// *********************************************************************************
// 文件名: lcd_test_tb.v   
// 创建人: 梁辉鸿
// 创建日期: 2021.3.20
// 联系方式: 17hhliang3@stu.edu.cn
// --------------------------------------------------------------------------------- 
// 模块名: lcd_test_tb
// 发布版本号: V0.0
// --------------------------------------------------------------------------------- 
// 功能说明: 1)Testbench for LCD测试模块
//
// --------------------------------------------------------------------------------- 
// 变更描述:     
//    
// ---------------------------------------------------------------------------------
// 发布记录: 	 
//
// ---------------------------------------------------------------------------------
// *********************************************************************************


// ---------------------------------------------------------------------------------
// 引用文件 Include File
// --------------------------------------------------------------------------------- 

// ---------------------------------------------------------------------------------
// 仿真时间 Simulation Timescale
// ---------------------------------------------------------------------------------
`timescale  1ns/1ns

// ---------------------------------------------------------------------------------
// 常量参数 Constant Parameters
// ---------------------------------------------------------------------------------


// ---------------------------------------------------------------------------------
// 模块定义 Module Define
// --------------------------------------------------------------------------------- 
module lcd_test_tb;

// ---------------------------------------------------------------------------------
// 局部常量 Local Constant Parameters
// ---------------------------------------------------------------------------------
    parameter   T = 20;

// ---------------------------------------------------------------------------------
// 模块内变量定义 Module_Variables
// --------------------------------------------------------------------------------- 
    // output signal
    reg           sys_clk;
    reg           key_rst_n;
    
    // input signal
    wire          lcd_de;
    wire          lcd_hs;
    wire          lcd_vs;
    wire          lcd_bl;
    wire          lcd_rst;
    wire          lcd_dclk;
    wire [ 7 : 0] lcd_r;
    wire [ 7 : 0] lcd_g;
    wire [ 7 : 0] lcd_b;
    
// ---------------------------------------------------------------------------------
// 数据流描述 Continuous Assignments
// --------------------------------------------------------------------------------- 


// ---------------------------------------------------------------------------------
// 结构化描述 Moudle Instantiate
// ---------------------------------------------------------------------------------
    lcd_test        U_lcd_test
    (
        // clock & reset
        .sys_clk                (sys_clk),	        
        .key_rst_n              (key_rst_n),          
                
        // output signal        
        // LCD 接口        
        .lcd_de                 (lcd_de),          
        .lcd_hs                 (lcd_hs),
        .lcd_vs                 (lcd_vs),
        .lcd_bl                 (lcd_bl),
        .lcd_rst                (lcd_rst),
        .lcd_dclk               (lcd_dclk),
        .lcd_r                  (lcd_r),
        .lcd_g                  (lcd_g),
        .lcd_b                  (lcd_b)
    );

// ---------------------------------------------------------------------------------
// 行为描述 Clocked Assignments
// ---------------------------------------------------------------------------------
    initial
    begin
        // Initialize Inputs
                sys_clk = 1'b0;
                key_rst_n = 1'b1;
        
        // Wait for global reset to finish
        #T      key_rst_n = 1'b0;
        #(T*10) key_rst_n = 1'b1;
        
        // Add stimulus here
        
        // Finish
        //#(T*10000) $stop;
    end
    
    // Generate global clk
    always #(T/2) sys_clk = ~sys_clk;
    
// ---------------------------------------------------------------------------------
// 任务定义 Called Tasks
// ---------------------------------------------------------------------------------
    
	
// ---------------------------------------------------------------------------------
// 函数定义 Called Functions
// ---------------------------------------------------------------------------------

    
endmodule 