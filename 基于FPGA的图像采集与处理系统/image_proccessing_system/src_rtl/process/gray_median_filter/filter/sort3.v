// ********************************************************************************* 
// 文件名: sort3.v   
// 创建人: 梁辉鸿
// 创建日期: 2021.3.25
// 联系方式: 17hhliang3@stu.edu.cn
// --------------------------------------------------------------------------------- 
// 模块名: sort3
// 发布版本号: V0.0
// --------------------------------------------------------------------------------- 
// 功能说明: 1)3个数据的排序算法模块
// 
// --------------------------------------------------------------------------------- 
// 变更描述:
//    
// ---------------------------------------------------------------------------------
// 发布记录:
//  			  
// ---------------------------------------------------------------------------------
// *********************************************************************************


// ---------------------------------------------------------------------------------
// 引用文件 Include File
// --------------------------------------------------------------------------------- 

// ---------------------------------------------------------------------------------
// 仿真时间 Simulation Timescale
// ---------------------------------------------------------------------------------

// ---------------------------------------------------------------------------------
// 常量参数 Constant Parameters
// ---------------------------------------------------------------------------------

// ---------------------------------------------------------------------------------
// 模块定义 Module Define
// --------------------------------------------------------------------------------- 
module sort3
(
    // clock & reset
    input 			    clk,	                //时钟信号
    input               rst_n,                  //复位信号, 低电平有效

    // input signal
    input      [ 7 : 0] data1,                  //待排序的数据1
    input      [ 7 : 0] data2,                  //待排序的数据2
    input      [ 7 : 0] data3,                  //待排序的数据3
    
    // output signal
    output reg [ 7 : 0] max_data,               //排序后的最大数据
    output reg [ 7 : 0] mid_data,               //排序后的中值数据
    output reg [ 7 : 0] min_data                //排序后的最小数据
);

// ---------------------------------------------------------------------------------
// 局部常量 Local Constant Parameters
// ---------------------------------------------------------------------------------

   
// ---------------------------------------------------------------------------------
// 模块内变量定义 Module_Variables
// --------------------------------------------------------------------------------- 
    
    
// ---------------------------------------------------------------------------------
// 数据流描述 Continuous Assignments
// ---------------------------------------------------------------------------------    


// ---------------------------------------------------------------------------------
// 行为描述 Clocked Assignments
// ---------------------------------------------------------------------------------
    // 对三个数据进行排序
    always @(posedge clk or negedge rst_n)
    begin
        if(!rst_n)
        begin
            max_data <= 8'd0;
            mid_data <= 8'd0;
            min_data <= 8'd0;
        end
        else
        begin
                    //取最大值
            if(data1 >= data2 && data1 >= data3)
            begin
                max_data <= data1;
            end
            else if(data2 >= data1 && data2 >= data3)
            begin
                max_data <= data2;
            end
            else  //(data3 >= data1 && data3 >= data2)
            begin
                max_data <= data3;
            end
                    //取中间值
            if((data1 >= data2 && data1 <= data3) || (data1 >= data3 && data1 <= data2))
            begin
                mid_data <= data1;
            end
            else if((data2 >= data1 && data2 <= data3) || (data2 >= data3 && data2 <= data1))
            begin
                mid_data <= data2;
            end
            else    //((data3 >= data1 && data3 <= data2) || (data3 >= data2 && data3 <= data1))
            begin
                mid_data <= data3;
            end
                    //取最小值
            if(data1 <= data2 && data1 <= data3)
            begin
                min_data <= data1;
            end
            else if(data2 <= data1 && data2 <= data3)
            begin
                min_data <= data2;
            end
            else    //(data3 <= data1 && data3 <= data2)
            begin
                min_data <= data3;
            end
        end
    end

// ---------------------------------------------------------------------------------
// 结构化描述 Moudle Instantiate
// ---------------------------------------------------------------------------------


// ---------------------------------------------------------------------------------
// 任务定义 Called Tasks
// ---------------------------------------------------------------------------------

	
// ---------------------------------------------------------------------------------
// 函数定义 Called Functions
// ---------------------------------------------------------------------------------

    
endmodule